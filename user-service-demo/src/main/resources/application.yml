server:
  port: 8081
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/could_demo
    username: root
    password: root
    hikari:
      maximum-pool-size: 20
      minimum-idle: 10
  application:
    name: user-service
mybatis:
  type-aliases-package: com.gyoomi.userservice.pojo
eureka:
  client:
    fetch-registry: true #是否拉取其他服务信息，默认是true
    register-with-eureka: true #是否注册自己的信息到EurekaService中，默认是true
    service-url: #Eureka-Serve的地址，如果是集群需要添加其他Server的地址
      defaultZone: http://127.0.0.1:10086/eureka
  instance:
    prefer-ip-address: true #当调用getHostname获取实例的hostname时，返回ip而不是host名称
    ip-address: 127.0.0.1 #指定自己的ip信息，不指定的话会自己寻找
    instance-id: ${spring.application.name}:${server.port}
    ## 默认格式是：`${hostname} + ${spring.application.name} + ${server.port}`
    ###############################服务提供者需要配置如下##########################################
    lease-expiration-duration-in-seconds: 10 #服务失效时间，默认值90秒
    lease-renewal-interval-in-seconds: 5 #服务续约(renew)的间隔，默认为30秒
    ## 默认情况下每个30秒服务会向注册中心发送一次心跳，证明自己还活着。如果超过90秒没有发送心
    ## 跳，EurekaServer就会认为该服务宕机，会从服务列表中移除，这两个值在生产环境不要修改，默认即可.
    ## 但是在开发时，这个值有点太长了，经常我们关掉一个服务，会发现Eureka依然认为服务在活着。所以我们在开发阶段可以适当调小。
logging:
  level:
    org.springframework: info
    com.netflix.discovery.DiscoveryClient: debug #显示心跳日志
